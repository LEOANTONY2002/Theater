import {StyleSheet} from 'react-native';
import {borderRadius, colors, spacing, typography} from './theme';

export const modalStyles = StyleSheet.create({
  modalContainer: {
    marginTop: 60,
    flex: 1,
    borderTopLeftRadius: borderRadius.xl,
    borderTopRightRadius: borderRadius.xl,
    overflow: 'hidden',
  },
  modalContent: {
    flex: 1,
  },
  blurView: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
  },
  modalHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: spacing.md,
    borderBottomWidth: 1,
    borderBottomColor: colors.background.secondary,
  },
  modalTitle: {
    color: colors.text.primary,
    ...typography.h3,
  },
  closeButton: {
    padding: spacing.sm,
  },
  scrollContent: {
    flex: 1,
    paddingVertical: spacing.md,
  },
  section: {
    marginBottom: spacing.lg,
    paddingHorizontal: spacing.md,
  },
  sectionTitle: {
    color: colors.text.primary,
    ...typography.body1,
    marginBottom: spacing.sm,
  },
  input: {
    backgroundColor: colors.modal.blurDark,
    borderColor: colors.modal.content,
    borderWidth: 1,
    borderRadius: borderRadius.md,
    padding: spacing.md,
    color: colors.text.primary,
    ...typography.body1,
  },
  contentTypeContainer: {
    flexDirection: 'row',
    gap: spacing.md,
  },
  contentTypeButton: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacing.xs,
    padding: spacing.md,
    backgroundColor: colors.modal.content,
    borderRadius: borderRadius.md,
  },
  activeButton: {
    borderColor: colors.modal.activeBorder,
    backgroundColor: colors.modal.active,
  },
  contentTypeText: {
    color: colors.text.secondary,
    ...typography.button,
  },
  activeText: {
    color: colors.modal.activeText,
    fontFamily: 'Inter_18pt-Regular',
    fontWeight: '600',
  },
  pickerContainer: {
    backgroundColor: colors.modal.content,
    borderRadius: borderRadius.md,
    overflow: 'hidden',
    paddingLeft: spacing.sm,
  },
  picker: {
    color: colors.text.primary,
  },
  slider: {
    width: '100%',
    height: 40,
  },
  dateContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    gap: spacing.md,
  },
  dateButton: {
    flex: 1,
    backgroundColor: colors.modal.content,
    padding: spacing.md,
    borderRadius: borderRadius.md,
    alignItems: 'center',
  },
  dateButtonText: {
    color: colors.text.primary,
    ...typography.body2,
  },
  footer: {
    flexDirection: 'row',
    gap: spacing.md,
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: colors.modal.blur,
    paddingHorizontal: spacing.md,
    paddingVertical: spacing.md,
    marginHorizontal: spacing.xl,
    marginBottom: spacing.xl,
    borderRadius: borderRadius.round,
  },
  footerButton: {
    flex: 1,
    padding: spacing.md,
    borderRadius: borderRadius.round,
    alignItems: 'center',
  },
  resetButton: {
    backgroundColor: colors.button.reset,
  },
  resetButtonText: {
    color: colors.text.primary,
    ...typography.button,
  },
  saveButton: {
    backgroundColor: colors.accent,
  },
  saveButtonText: {
    color: colors.background.primary,
    ...typography.button,
  },
  applyButton: {
    backgroundColor: colors.accent,
  },
  applyButtonText: {
    color: colors.background.primary,
    ...typography.button,
  },
  loadingContainer: {
    height: 50,
    justifyContent: 'center',
    alignItems: 'center',
  },
  genresContainer: {
    flex: 1,
    gap: 4,
    alignSelf: 'center',
    width: '100%',
  },
  genresRow: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: spacing.sm,
  },
  showAllButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: borderRadius.md,
    paddingVertical: spacing.sm,
  },
  showAllText: {
    color: colors.text.muted,
    ...typography.body2,
    fontWeight: '600',
    marginRight: spacing.xs,
  },
  allGenresGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center',
    gap: spacing.sm,
    paddingBottom: spacing.lg,
  },
  allProvidersGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center',
    gap: spacing.sm,
    paddingBottom: spacing.lg,
  },
  sectionHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: spacing.md,
  },
  tagContainer: {
    marginTop: -spacing.md,
    marginBottom: spacing.md,
    paddingHorizontal: spacing.md,
  },
  tagContent: {
    flexDirection: 'row',
    gap: spacing.sm,
    paddingTop: spacing.md,
  },
  tag: {
    backgroundColor: colors.modal.content,
    paddingHorizontal: spacing.md,
    paddingVertical: spacing.xl,
    marginRight: spacing.sm,
    borderRadius: borderRadius.lg,
    width: 100,
    height: 100,
    alignItems: 'center',
    justifyContent: 'center',
  },
  tagGradient: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    height: 75,
    marginTop: 25,
    zIndex: 1,
    borderBottomLeftRadius: borderRadius.lg,
    borderBottomRightRadius: borderRadius.lg,
  },
  tagText: {
    color: colors.text.primary,
    ...typography.h2,
    fontWeight: '900',
    opacity: 0.3,
    textAlign: 'center',
  },
  activeTag: {
    backgroundColor: colors.modal.active,
    borderWidth: 1,
    borderColor: colors.modal.activeBorder,
  },
  activeTagText: {
    opacity: 1,
    fontFamily: 'Inter_18pt-Regular',
    fontWeight: '600',
  },
  tagSubText: {
    color: colors.text.secondary,
    ...typography.body2,
    opacity: 0.3,
    textAlign: 'center',
  },
  saveButtonLoading: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacing.sm,
  },
  inputError: {
    borderColor: colors.modal.activeBorder,
    borderWidth: 1,
  },
  inputErrorContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: spacing.xs,
    marginTop: spacing.xs,
  },
  inputErrorMessage: {
    color: colors.status.error,
    ...typography.body2,
    fontSize: 12,
  },
  // Toast styles
  toastContainer: {
    width: '100%',
    height: '100%',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 1000,
    backgroundColor: 'rgba(0, 0, 0, 0.9)',
  },
  toastContent: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: colors.modal.blur,
    borderRadius: borderRadius.lg,
    padding: spacing.lg,
    marginHorizontal: spacing.xl,
    shadowColor: '#000',
    shadowOffset: {width: 0, height: 4},
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 10,
    maxWidth: 400,
  },
  toastMessage: {
    color: colors.text.primary,
    ...typography.body1,
    flex: 1,
    marginLeft: spacing.sm,
    textAlign: 'center',
  },
  toastCloseButton: {
    padding: spacing.sm,
    marginLeft: spacing.md,
    backgroundColor: colors.modal.content,
    borderRadius: borderRadius.md,
  },
});

export const FilterCardStyles = (
  SCREEN_WIDTH: number,
  CARD_HEIGHT: number,
  CARD_WIDTH: number,
  DOT_SIZE: number,
  DOT_SPACING: number,
) =>
  StyleSheet.create({
    wrapper: {
      // flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      width: SCREEN_WIDTH,
      marginTop: 50,
      paddingBottom: spacing.xxl,
      marginBottom: spacing.xxl,
    },
    gradient: {
      position: 'absolute',
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: -1,
      height: 300,
      marginHorizontal: spacing.lg,
      paddingBottom: spacing.xxl,
      borderRadius: 50,
      borderBottomWidth: 1,
      borderLeftWidth: 1,
      borderColor: 'rgba(255, 255, 255, 0.11)',
      // display: 'none',
    },
    titleContainer: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 0,
      pointerEvents: 'none',
      opacity: 0.2,
    },
    filterName: {
      color: colors.text.primary,
      paddingHorizontal: spacing.lg,
      fontSize: 70,
      fontWeight: '900',
      textAlign: 'center',
      position: 'absolute',
      top: -60,
      left: 0,
      right: 0,
      bottom: 0,
    },
    cardStack: {
      width: SCREEN_WIDTH,
      height: CARD_HEIGHT,
      alignItems: 'center',
      justifyContent: 'center',
      position: 'relative',
      marginBottom: spacing.md,
      // marginLeft: -30,
      // padding: 20,
    },
    card: {
      width: CARD_WIDTH,
      height: CARD_HEIGHT,
      borderRadius: borderRadius.lg || 18,
      position: 'absolute',
      shadowColor: '#000',
      shadowOffset: {width: 0, height: 4},
      shadowOpacity: 0.18,
      shadowRadius: 8,
      elevation: 40,
      backgroundColor: colors.background.primary,
    },
    pagination: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginTop: spacing.lg,
      height: DOT_SIZE + 2,
      position: 'relative',
    },
    dot: {
      width: DOT_SIZE,
      height: DOT_SIZE,
      borderRadius: DOT_SIZE / 2,
      backgroundColor: colors.text.secondary,
      marginHorizontal: DOT_SPACING / 2,
      opacity: 0.3,
    },
    activeDot: {
      position: 'absolute',
      width: DOT_SIZE + 4,
      height: DOT_SIZE + 4,
      borderRadius: (DOT_SIZE + 4) / 2,
      backgroundColor: colors.accent,
      top: -2,
      left: 4,
      zIndex: 2,
    },
  });
